// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: messages.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Message int32

const (
	// ipc commands
	Message_IPC_PLAY                                Message = 0
	Message_IPC_PAUSE                               Message = 1
	Message_IPC_LOAD                                Message = 2
	Message_IPC_VOLUME                              Message = 3
	Message_IPC_SKIP                                Message = 4 // not really IPC but in the same workflow
	Message_MESSAGE_ARTWORK_SCAN                    Message = 10
	Message_MESSAGE_AUDIO_SCAN                      Message = 11
	Message_MESSAGE_MEDIA_INFO                      Message = 12
	Message_MESSAGE_MEDIA_UPDATE_ARTWORK            Message = 13
	Message_MESSAGE_MEDIA_UPDATE_SHA                Message = 14
	Message_MESSAGE_MEDIA_DELETE                    Message = 15
	Message_MESSAGE_TAG_UPDATE                      Message = 16
	Message_MESSAGE_MEDIA_UPDATE                    Message = 17
	Message_MESSAGE_MEDIA_SPECTRUM_GENERATE         Message = 18
	Message_MESSAGE_MEDIA_DB_SELECT                 Message = 19
	Message_MESSAGE_MEDIA_EXTRACT_ARTWORK_FROM_FILE Message = 20
	Message_MESSAGE_UPSERT_MEDIA_EVENT              Message = 21
	Message_MESSAGE_ARTWORK_FIND_ALBUM_COVER        Message = 22
	Message_MESSAGE_ARTWORK_DOWNLOAD                Message = 23
	Message_MESSAGE_IPC                             Message = 100
	// specific to mpv events
	Message_MESSAGE_MPV_EOF_REACHED    Message = 202
	Message_MESSAGE_MPV_PERCENT_POS    Message = 203
	Message_MESSAGE_MPV_TIME_POS       Message = 204
	Message_MESSAGE_MPV_TIME_REMAINING Message = 205
	// specific to player events
	Message_MESSAGE_EVENT_ON_TRACK_STARTED             Message = 250
	Message_MESSAGE_EVENT_ON_TRACK_FINISHED            Message = 251
	Message_MESSAGE_EVENT_ON_TRACK_PLAY_COUNT_INCREASE Message = 252
	Message_MESSAGE_EVENT_ON_TRACK_SKIP_COUNT_INCREASE Message = 253
	// queue management
	Message_MESSAGE_QUEUE_LIST   Message = 300
	Message_MESSAGE_QUEUE_ADD    Message = 301
	Message_MESSAGE_QUEUE_REMOVE Message = 302
	Message_MESSAGE_QUEUE_SAVE   Message = 303
	// file management
	Message_MESSAGE_DIRECTORY_READ Message = 400
	// micro service discovery
	Message_MESSAGE_MICRO_SERVICE_ARTWORK   Message = 420
	Message_MESSAGE_MICRO_SERVICE_AUDIOSCAN Message = 421
	Message_MESSAGE_MICRO_SERVICE_MEDIAINFO Message = 422
	Message_MESSAGE_MICRO_SERVICE_PLAYER    Message = 423
	Message_MESSAGE_MICRO_SERVICE_RESTAPI   Message = 424
	Message_MESSAGE_MICRO_SERVICE_SOCKET    Message = 425
	// real time socket events
	Message_MESSAGE_SOCKET_TRACK_POSITION_PERCENT        Message = 500
	Message_MESSAGE_SOCKET_TRACK_POSITION_PERCENT_CHANGE Message = 501
	Message_MESSAGE_SOCKET_QUEUE_CHANGE                  Message = 502
	Message_MESSAGE_SOCKET_PLAY_TRACK                    Message = 503
)

// Enum value maps for Message.
var (
	Message_name = map[int32]string{
		0:   "IPC_PLAY",
		1:   "IPC_PAUSE",
		2:   "IPC_LOAD",
		3:   "IPC_VOLUME",
		4:   "IPC_SKIP",
		10:  "MESSAGE_ARTWORK_SCAN",
		11:  "MESSAGE_AUDIO_SCAN",
		12:  "MESSAGE_MEDIA_INFO",
		13:  "MESSAGE_MEDIA_UPDATE_ARTWORK",
		14:  "MESSAGE_MEDIA_UPDATE_SHA",
		15:  "MESSAGE_MEDIA_DELETE",
		16:  "MESSAGE_TAG_UPDATE",
		17:  "MESSAGE_MEDIA_UPDATE",
		18:  "MESSAGE_MEDIA_SPECTRUM_GENERATE",
		19:  "MESSAGE_MEDIA_DB_SELECT",
		20:  "MESSAGE_MEDIA_EXTRACT_ARTWORK_FROM_FILE",
		21:  "MESSAGE_UPSERT_MEDIA_EVENT",
		22:  "MESSAGE_ARTWORK_FIND_ALBUM_COVER",
		23:  "MESSAGE_ARTWORK_DOWNLOAD",
		100: "MESSAGE_IPC",
		202: "MESSAGE_MPV_EOF_REACHED",
		203: "MESSAGE_MPV_PERCENT_POS",
		204: "MESSAGE_MPV_TIME_POS",
		205: "MESSAGE_MPV_TIME_REMAINING",
		250: "MESSAGE_EVENT_ON_TRACK_STARTED",
		251: "MESSAGE_EVENT_ON_TRACK_FINISHED",
		252: "MESSAGE_EVENT_ON_TRACK_PLAY_COUNT_INCREASE",
		253: "MESSAGE_EVENT_ON_TRACK_SKIP_COUNT_INCREASE",
		300: "MESSAGE_QUEUE_LIST",
		301: "MESSAGE_QUEUE_ADD",
		302: "MESSAGE_QUEUE_REMOVE",
		303: "MESSAGE_QUEUE_SAVE",
		400: "MESSAGE_DIRECTORY_READ",
		420: "MESSAGE_MICRO_SERVICE_ARTWORK",
		421: "MESSAGE_MICRO_SERVICE_AUDIOSCAN",
		422: "MESSAGE_MICRO_SERVICE_MEDIAINFO",
		423: "MESSAGE_MICRO_SERVICE_PLAYER",
		424: "MESSAGE_MICRO_SERVICE_RESTAPI",
		425: "MESSAGE_MICRO_SERVICE_SOCKET",
		500: "MESSAGE_SOCKET_TRACK_POSITION_PERCENT",
		501: "MESSAGE_SOCKET_TRACK_POSITION_PERCENT_CHANGE",
		502: "MESSAGE_SOCKET_QUEUE_CHANGE",
		503: "MESSAGE_SOCKET_PLAY_TRACK",
	}
	Message_value = map[string]int32{
		"IPC_PLAY":                                     0,
		"IPC_PAUSE":                                    1,
		"IPC_LOAD":                                     2,
		"IPC_VOLUME":                                   3,
		"IPC_SKIP":                                     4,
		"MESSAGE_ARTWORK_SCAN":                         10,
		"MESSAGE_AUDIO_SCAN":                           11,
		"MESSAGE_MEDIA_INFO":                           12,
		"MESSAGE_MEDIA_UPDATE_ARTWORK":                 13,
		"MESSAGE_MEDIA_UPDATE_SHA":                     14,
		"MESSAGE_MEDIA_DELETE":                         15,
		"MESSAGE_TAG_UPDATE":                           16,
		"MESSAGE_MEDIA_UPDATE":                         17,
		"MESSAGE_MEDIA_SPECTRUM_GENERATE":              18,
		"MESSAGE_MEDIA_DB_SELECT":                      19,
		"MESSAGE_MEDIA_EXTRACT_ARTWORK_FROM_FILE":      20,
		"MESSAGE_UPSERT_MEDIA_EVENT":                   21,
		"MESSAGE_ARTWORK_FIND_ALBUM_COVER":             22,
		"MESSAGE_ARTWORK_DOWNLOAD":                     23,
		"MESSAGE_IPC":                                  100,
		"MESSAGE_MPV_EOF_REACHED":                      202,
		"MESSAGE_MPV_PERCENT_POS":                      203,
		"MESSAGE_MPV_TIME_POS":                         204,
		"MESSAGE_MPV_TIME_REMAINING":                   205,
		"MESSAGE_EVENT_ON_TRACK_STARTED":               250,
		"MESSAGE_EVENT_ON_TRACK_FINISHED":              251,
		"MESSAGE_EVENT_ON_TRACK_PLAY_COUNT_INCREASE":   252,
		"MESSAGE_EVENT_ON_TRACK_SKIP_COUNT_INCREASE":   253,
		"MESSAGE_QUEUE_LIST":                           300,
		"MESSAGE_QUEUE_ADD":                            301,
		"MESSAGE_QUEUE_REMOVE":                         302,
		"MESSAGE_QUEUE_SAVE":                           303,
		"MESSAGE_DIRECTORY_READ":                       400,
		"MESSAGE_MICRO_SERVICE_ARTWORK":                420,
		"MESSAGE_MICRO_SERVICE_AUDIOSCAN":              421,
		"MESSAGE_MICRO_SERVICE_MEDIAINFO":              422,
		"MESSAGE_MICRO_SERVICE_PLAYER":                 423,
		"MESSAGE_MICRO_SERVICE_RESTAPI":                424,
		"MESSAGE_MICRO_SERVICE_SOCKET":                 425,
		"MESSAGE_SOCKET_TRACK_POSITION_PERCENT":        500,
		"MESSAGE_SOCKET_TRACK_POSITION_PERCENT_CHANGE": 501,
		"MESSAGE_SOCKET_QUEUE_CHANGE":                  502,
		"MESSAGE_SOCKET_PLAY_TRACK":                    503,
	}
)

func (x Message) Enum() *Message {
	p := new(Message)
	*p = x
	return p
}

func (x Message) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (Message) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x Message) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message.Descriptor instead.
func (Message) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type NamedPosition int32

const (
	NamedPosition_POSITION_TOP    NamedPosition = 0
	NamedPosition_POSITION_BOTTOM NamedPosition = 1
)

// Enum value maps for NamedPosition.
var (
	NamedPosition_name = map[int32]string{
		0: "POSITION_TOP",
		1: "POSITION_BOTTOM",
	}
	NamedPosition_value = map[string]int32{
		"POSITION_TOP":    0,
		"POSITION_BOTTOM": 1,
	}
)

func (x NamedPosition) Enum() *NamedPosition {
	p := new(NamedPosition)
	*p = x
	return p
}

func (x NamedPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NamedPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (NamedPosition) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x NamedPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NamedPosition.Descriptor instead.
func (NamedPosition) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

// these are commands that will be sent from the browser to the websocket server
// websocket should have its own logic to dispatch the NATS message
// is this really needed now? no, we'll keep it as documentation for js madness
// [deprecated]
type RemoteCommand int32

const (
	RemoteCommand_REMOTE_PLAY   RemoteCommand = 0
	RemoteCommand_REMOTE_PAUSE  RemoteCommand = 1
	RemoteCommand_REMOTE_VOLUME RemoteCommand = 2
)

// Enum value maps for RemoteCommand.
var (
	RemoteCommand_name = map[int32]string{
		0: "REMOTE_PLAY",
		1: "REMOTE_PAUSE",
		2: "REMOTE_VOLUME",
	}
	RemoteCommand_value = map[string]int32{
		"REMOTE_PLAY":   0,
		"REMOTE_PAUSE":  1,
		"REMOTE_VOLUME": 2,
	}
)

func (x RemoteCommand) Enum() *RemoteCommand {
	p := new(RemoteCommand)
	*p = x
	return p
}

func (x RemoteCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (RemoteCommand) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x RemoteCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteCommand.Descriptor instead.
func (RemoteCommand) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type ArtworkDownloadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumIdentifier string `protobuf:"bytes,1,opt,name=album_identifier,json=albumIdentifier,proto3" json:"album_identifier,omitempty"`
	Uri             string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Force           bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *ArtworkDownloadInput) Reset() {
	*x = ArtworkDownloadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtworkDownloadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtworkDownloadInput) ProtoMessage() {}

func (x *ArtworkDownloadInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtworkDownloadInput.ProtoReflect.Descriptor instead.
func (*ArtworkDownloadInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *ArtworkDownloadInput) GetAlbumIdentifier() string {
	if x != nil {
		return x.AlbumIdentifier
	}
	return ""
}

func (x *ArtworkDownloadInput) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ArtworkDownloadInput) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ArtworkDownloadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ArtworkDownloadOutput) Reset() {
	*x = ArtworkDownloadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtworkDownloadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtworkDownloadOutput) ProtoMessage() {}

func (x *ArtworkDownloadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtworkDownloadOutput.ProtoReflect.Descriptor instead.
func (*ArtworkDownloadOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ArtworkDownloadOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ArtworkExtractInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media    *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	ScanDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=scan_date,json=scanDate,proto3" json:"scan_date,omitempty"`
}

func (x *ArtworkExtractInput) Reset() {
	*x = ArtworkExtractInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtworkExtractInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtworkExtractInput) ProtoMessage() {}

func (x *ArtworkExtractInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtworkExtractInput.ProtoReflect.Descriptor instead.
func (*ArtworkExtractInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *ArtworkExtractInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ArtworkExtractInput) GetScanDate() *timestamp.Timestamp {
	if x != nil {
		return x.ScanDate
	}
	return nil
}

type ArtworkUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *ArtworkUpdateInput) Reset() {
	*x = ArtworkUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtworkUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtworkUpdateInput) ProtoMessage() {}

func (x *ArtworkUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtworkUpdateInput.ProtoReflect.Descriptor instead.
func (*ArtworkUpdateInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ArtworkUpdateInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type DirectoryReadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root string `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *DirectoryReadInput) Reset() {
	*x = DirectoryReadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryReadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryReadInput) ProtoMessage() {}

func (x *DirectoryReadInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryReadInput.ProtoReflect.Descriptor instead.
func (*DirectoryReadInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *DirectoryReadInput) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type DirectoryReadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*FileItem `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DirectoryReadOutput) Reset() {
	*x = DirectoryReadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryReadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryReadOutput) ProtoMessage() {}

func (x *DirectoryReadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryReadOutput.ProtoReflect.Descriptor instead.
func (*DirectoryReadOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *DirectoryReadOutput) GetFiles() []*FileItem {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DirectoryReadOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type IPCInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media   *Media  `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Value   string  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Command Message `protobuf:"varint,3,opt,name=command,proto3,enum=pb.Message" json:"command,omitempty"`
}

func (x *IPCInput) Reset() {
	*x = IPCInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCInput) ProtoMessage() {}

func (x *IPCInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCInput.ProtoReflect.Descriptor instead.
func (*IPCInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *IPCInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *IPCInput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *IPCInput) GetCommand() Message {
	if x != nil {
		return x.Command
	}
	return Message_IPC_PLAY
}

type IPCOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *IPCOutput) Reset() {
	*x = IPCOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCOutput) ProtoMessage() {}

func (x *IPCOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCOutput.ProtoReflect.Descriptor instead.
func (*IPCOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *IPCOutput) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IPCOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type FileItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	IsDir    bool   `protobuf:"varint,2,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Id       string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FileItem) Reset() {
	*x = FileItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileItem) ProtoMessage() {}

func (x *FileItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileItem.ProtoReflect.Descriptor instead.
func (*FileItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *FileItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FileItem) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MediaEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sha   string               `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Ts    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Event Message              `protobuf:"varint,4,opt,name=event,proto3,enum=pb.Message" json:"event,omitempty"`
}

func (x *MediaEventInput) Reset() {
	*x = MediaEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaEventInput) ProtoMessage() {}

func (x *MediaEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaEventInput.ProtoReflect.Descriptor instead.
func (*MediaEventInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *MediaEventInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaEventInput) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *MediaEventInput) GetTs() *timestamp.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *MediaEventInput) GetEvent() Message {
	if x != nil {
		return x.Event
	}
	return Message_IPC_PLAY
}

type MediaInfoInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Media    *Media `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *MediaInfoInput) Reset() {
	*x = MediaInfoInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaInfoInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaInfoInput) ProtoMessage() {}

func (x *MediaInfoInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaInfoInput.ProtoReflect.Descriptor instead.
func (*MediaInfoInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *MediaInfoInput) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MediaInfoInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type MediaInfoOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media            *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Response         *Response            `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	LastModifiedDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_modified_date,json=lastModifiedDate,proto3" json:"last_modified_date,omitempty"`
	Raw              string               `protobuf:"bytes,4,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *MediaInfoOutput) Reset() {
	*x = MediaInfoOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaInfoOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaInfoOutput) ProtoMessage() {}

func (x *MediaInfoOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaInfoOutput.ProtoReflect.Descriptor instead.
func (*MediaInfoOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *MediaInfoOutput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *MediaInfoOutput) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *MediaInfoOutput) GetLastModifiedDate() *timestamp.Timestamp {
	if x != nil {
		return x.LastModifiedDate
	}
	return nil
}

func (x *MediaInfoOutput) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type MediaInfosOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medias   []*Media  `protobuf:"bytes,1,rep,name=medias,proto3" json:"medias,omitempty"`
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *MediaInfosOutput) Reset() {
	*x = MediaInfosOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaInfosOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaInfosOutput) ProtoMessage() {}

func (x *MediaInfosOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaInfosOutput.ProtoReflect.Descriptor instead.
func (*MediaInfosOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *MediaInfosOutput) GetMedias() []*Media {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *MediaInfosOutput) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type MediaUpdateSHAInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldSHA string `protobuf:"bytes,1,opt,name=oldSHA,proto3" json:"oldSHA,omitempty"`
	NewSHA string `protobuf:"bytes,2,opt,name=newSHA,proto3" json:"newSHA,omitempty"`
}

func (x *MediaUpdateSHAInput) Reset() {
	*x = MediaUpdateSHAInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaUpdateSHAInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaUpdateSHAInput) ProtoMessage() {}

func (x *MediaUpdateSHAInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaUpdateSHAInput.ProtoReflect.Descriptor instead.
func (*MediaUpdateSHAInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *MediaUpdateSHAInput) GetOldSHA() string {
	if x != nil {
		return x.OldSHA
	}
	return ""
}

func (x *MediaUpdateSHAInput) GetNewSHA() string {
	if x != nil {
		return x.NewSHA
	}
	return ""
}

type MicroServiceDiscoveryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MicroServiceDiscoveryInput) Reset() {
	*x = MicroServiceDiscoveryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicroServiceDiscoveryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroServiceDiscoveryInput) ProtoMessage() {}

func (x *MicroServiceDiscoveryInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroServiceDiscoveryInput.ProtoReflect.Descriptor instead.
func (*MicroServiceDiscoveryInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

type MicroServiceDiscoveryOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MicroServiceDiscoveryOutput) Reset() {
	*x = MicroServiceDiscoveryOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicroServiceDiscoveryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroServiceDiscoveryOutput) ProtoMessage() {}

func (x *MicroServiceDiscoveryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroServiceDiscoveryOutput.ProtoReflect.Descriptor instead.
func (*MicroServiceDiscoveryOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *MicroServiceDiscoveryOutput) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MicroServiceDiscoveryOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlayTrackInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *PlayTrackInput) Reset() {
	*x = PlayTrackInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayTrackInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayTrackInput) ProtoMessage() {}

func (x *PlayTrackInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayTrackInput.ProtoReflect.Descriptor instead.
func (*PlayTrackInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *PlayTrackInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Media    *Media `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
	Position int32  `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *Queue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Queue) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Queue) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type QueueInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media         *Media        `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Index         int64         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	NamedPosition NamedPosition `protobuf:"varint,3,opt,name=named_position,json=namedPosition,proto3,enum=pb.NamedPosition" json:"named_position,omitempty"`
}

func (x *QueueInput) Reset() {
	*x = QueueInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueInput) ProtoMessage() {}

func (x *QueueInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueInput.ProtoReflect.Descriptor instead.
func (*QueueInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *QueueInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *QueueInput) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *QueueInput) GetNamedPosition() NamedPosition {
	if x != nil {
		return x.NamedPosition
	}
	return NamedPosition_POSITION_TOP
}

type QueueOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*Queue `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Error string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *QueueOutput) Reset() {
	*x = QueueOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueOutput) ProtoMessage() {}

func (x *QueueOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueOutput.ProtoReflect.Descriptor instead.
func (*QueueOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *QueueOutput) GetRows() []*Queue {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *QueueOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type QueueChangedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueueChangedInput) Reset() {
	*x = QueueChangedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueChangedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueChangedInput) ProtoMessage() {}

func (x *QueueChangedInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueChangedInput.ProtoReflect.Descriptor instead.
func (*QueueChangedInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *Response) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ScanDirectoryAudioFilesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root     string               `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	ScanDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=scan_date,json=scanDate,proto3" json:"scan_date,omitempty"`
	Force    bool                 `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *ScanDirectoryAudioFilesInput) Reset() {
	*x = ScanDirectoryAudioFilesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanDirectoryAudioFilesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDirectoryAudioFilesInput) ProtoMessage() {}

func (x *ScanDirectoryAudioFilesInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDirectoryAudioFilesInput.ProtoReflect.Descriptor instead.
func (*ScanDirectoryAudioFilesInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *ScanDirectoryAudioFilesInput) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *ScanDirectoryAudioFilesInput) GetScanDate() *timestamp.Timestamp {
	if x != nil {
		return x.ScanDate
	}
	return nil
}

func (x *ScanDirectoryAudioFilesInput) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type SocketTrackPositionChangeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent float64 `protobuf:"fixed64,1,opt,name=percent,proto3" json:"percent,omitempty"`
	Media   *Media  `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *SocketTrackPositionChangeInput) Reset() {
	*x = SocketTrackPositionChangeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketTrackPositionChangeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketTrackPositionChangeInput) ProtoMessage() {}

func (x *SocketTrackPositionChangeInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketTrackPositionChangeInput.ProtoReflect.Descriptor instead.
func (*SocketTrackPositionChangeInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *SocketTrackPositionChangeInput) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SocketTrackPositionChangeInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type SpectrumGenerateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media  *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Width  int64  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *SpectrumGenerateInput) Reset() {
	*x = SpectrumGenerateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpectrumGenerateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpectrumGenerateInput) ProtoMessage() {}

func (x *SpectrumGenerateInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpectrumGenerateInput.ProtoReflect.Descriptor instead.
func (*SpectrumGenerateInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *SpectrumGenerateInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SpectrumGenerateInput) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SpectrumGenerateInput) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SpectrumGenerateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SpectrumGenerateOutput) Reset() {
	*x = SpectrumGenerateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpectrumGenerateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpectrumGenerateOutput) ProtoMessage() {}

func (x *SpectrumGenerateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpectrumGenerateOutput.ProtoReflect.Descriptor instead.
func (*SpectrumGenerateOutput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *SpectrumGenerateOutput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SpectrumGenerateOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SpectrumGenerateOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TrackStartedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media     *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrackStartedInput) Reset() {
	*x = TrackStartedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackStartedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackStartedInput) ProtoMessage() {}

func (x *TrackStartedInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackStartedInput.ProtoReflect.Descriptor instead.
func (*TrackStartedInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *TrackStartedInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *TrackStartedInput) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TrackEndedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media     *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrackEndedInput) Reset() {
	*x = TrackEndedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackEndedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEndedInput) ProtoMessage() {}

func (x *TrackEndedInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEndedInput.ProtoReflect.Descriptor instead.
func (*TrackEndedInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

func (x *TrackEndedInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *TrackEndedInput) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TrackPlayedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media     *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrackPlayedInput) Reset() {
	*x = TrackPlayedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPlayedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPlayedInput) ProtoMessage() {}

func (x *TrackPlayedInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPlayedInput.ProtoReflect.Descriptor instead.
func (*TrackPlayedInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

func (x *TrackPlayedInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *TrackPlayedInput) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TrackPositionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media        *Media  `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Percent      float32 `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	Seconds      float32 `protobuf:"fixed32,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	SecondsTotal float32 `protobuf:"fixed32,4,opt,name=secondsTotal,proto3" json:"secondsTotal,omitempty"`
}

func (x *TrackPositionInput) Reset() {
	*x = TrackPositionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPositionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPositionInput) ProtoMessage() {}

func (x *TrackPositionInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPositionInput.ProtoReflect.Descriptor instead.
func (*TrackPositionInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *TrackPositionInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *TrackPositionInput) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *TrackPositionInput) GetSeconds() float32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *TrackPositionInput) GetSecondsTotal() float32 {
	if x != nil {
		return x.SecondsTotal
	}
	return 0
}

type TrackSkippedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media     *Media               `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrackSkippedInput) Reset() {
	*x = TrackSkippedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackSkippedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackSkippedInput) ProtoMessage() {}

func (x *TrackSkippedInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackSkippedInput.ProtoReflect.Descriptor instead.
func (*TrackSkippedInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (x *TrackSkippedInput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *TrackSkippedInput) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x69, 0x0a, 0x14, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x2d, 0x0a,
	0x15, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x13,
	0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x35, 0x0a,
	0x12, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x4f,
	0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x68, 0x0a, 0x08, 0x49, 0x50, 0x43, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x49, 0x50, 0x43,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x75, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x61, 0x77, 0x22, 0x5f, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x48, 0x41, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x6c, 0x64, 0x53, 0x48, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64,
	0x53, 0x48, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x53, 0x48, 0x41, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x53, 0x48, 0x41, 0x22, 0x1c, 0x0a, 0x1a, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x41, 0x0a, 0x1b, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22,
	0x54, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x38, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x30, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x81, 0x01, 0x0a, 0x1c, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x1e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x22, 0x66, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x63, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6e, 0x0a,
	0x11, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6c, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6d, 0x0a, 0x10, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6e, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0xae, 0x0a, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x50, 0x43, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x50, 0x43, 0x5f, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x50, 0x43, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x50, 0x43, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x50, 0x43, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x10,
	0x0b, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0c, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x41, 0x47, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x11, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x54, 0x52, 0x55, 0x4d, 0x5f,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x44, 0x42, 0x5f, 0x53,
	0x45, 0x4c, 0x45, 0x43, 0x54, 0x10, 0x13, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54,
	0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x46, 0x49,
	0x4c, 0x45, 0x10, 0x14, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x55, 0x50, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x15, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x49, 0x4e, 0x44, 0x5f, 0x41, 0x4c, 0x42,
	0x55, 0x4d, 0x5f, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x44, 0x4f,
	0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x17, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x49, 0x50, 0x43, 0x10, 0x64, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x50, 0x56, 0x5f, 0x45, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x41,
	0x43, 0x48, 0x45, 0x44, 0x10, 0xca, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x4d, 0x50, 0x56, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x4f, 0x53, 0x10, 0xcb, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x4d, 0x50, 0x56, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x10, 0xcc, 0x01,
	0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x50, 0x56, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0xcd,
	0x01, 0x12, 0x23, 0x0a, 0x1e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0xfa, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0xfb, 0x01, 0x12, 0x2f, 0x0a, 0x2a,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e,
	0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x10, 0xfc, 0x01, 0x12, 0x2f, 0x0a,
	0x2a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4f,
	0x4e, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x10, 0xfd, 0x01, 0x12, 0x17,
	0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0xac, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x10, 0xad, 0x02, 0x12,
	0x19, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45,
	0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0xae, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45,
	0x10, 0xaf, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x90, 0x03,
	0x12, 0x22, 0x0a, 0x1d, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52,
	0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x10, 0xa4, 0x03, 0x12, 0x24, 0x0a, 0x1f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x4d, 0x49, 0x43, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x53, 0x43, 0x41, 0x4e, 0x10, 0xa5, 0x03, 0x12, 0x24, 0x0a, 0x1f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0xa6, 0x03,
	0x12, 0x21, 0x0a, 0x1c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52,
	0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x10, 0xa7, 0x03, 0x12, 0x22, 0x0a, 0x1d, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4d,
	0x49, 0x43, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x41, 0x50, 0x49, 0x10, 0xa8, 0x03, 0x12, 0x21, 0x0a, 0x1c, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x10, 0xa9, 0x03, 0x12, 0x2a, 0x0a, 0x25, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x52, 0x41,
	0x43, 0x4b, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x43,
	0x45, 0x4e, 0x54, 0x10, 0xf4, 0x03, 0x12, 0x31, 0x0a, 0x2c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0xf5, 0x03, 0x12, 0x20, 0x0a, 0x1b, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0xf6, 0x03, 0x12, 0x1e, 0x0a, 0x19, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x10, 0xf7, 0x03, 0x2a, 0x36, 0x0a, 0x0d, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f,
	0x4d, 0x10, 0x01, 0x2a, 0x45, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f,
	0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x4d, 0x4f, 0x54,
	0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x75, 0x6c, 0x65, 0x79, 0x7a,
	0x61, 0x6f, 0x6c, 0x61, 0x2f, 0x6d, 0x61, 0x75, 0x70, 0x6f, 0x64, 0x2f, 0x73, 0x72, 0x63, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_messages_proto_goTypes = []interface{}{
	(Message)(0),                           // 0: pb.Message
	(NamedPosition)(0),                     // 1: pb.NamedPosition
	(RemoteCommand)(0),                     // 2: pb.RemoteCommand
	(*ArtworkDownloadInput)(nil),           // 3: pb.ArtworkDownloadInput
	(*ArtworkDownloadOutput)(nil),          // 4: pb.ArtworkDownloadOutput
	(*ArtworkExtractInput)(nil),            // 5: pb.ArtworkExtractInput
	(*ArtworkUpdateInput)(nil),             // 6: pb.ArtworkUpdateInput
	(*DirectoryReadInput)(nil),             // 7: pb.DirectoryReadInput
	(*DirectoryReadOutput)(nil),            // 8: pb.DirectoryReadOutput
	(*IPCInput)(nil),                       // 9: pb.IPCInput
	(*IPCOutput)(nil),                      // 10: pb.IPCOutput
	(*FileItem)(nil),                       // 11: pb.FileItem
	(*MediaEventInput)(nil),                // 12: pb.MediaEventInput
	(*MediaInfoInput)(nil),                 // 13: pb.MediaInfoInput
	(*MediaInfoOutput)(nil),                // 14: pb.MediaInfoOutput
	(*MediaInfosOutput)(nil),               // 15: pb.MediaInfosOutput
	(*MediaUpdateSHAInput)(nil),            // 16: pb.MediaUpdateSHAInput
	(*MicroServiceDiscoveryInput)(nil),     // 17: pb.MicroServiceDiscoveryInput
	(*MicroServiceDiscoveryOutput)(nil),    // 18: pb.MicroServiceDiscoveryOutput
	(*PlayTrackInput)(nil),                 // 19: pb.PlayTrackInput
	(*Queue)(nil),                          // 20: pb.Queue
	(*QueueInput)(nil),                     // 21: pb.QueueInput
	(*QueueOutput)(nil),                    // 22: pb.QueueOutput
	(*QueueChangedInput)(nil),              // 23: pb.QueueChangedInput
	(*Response)(nil),                       // 24: pb.Response
	(*ScanDirectoryAudioFilesInput)(nil),   // 25: pb.ScanDirectoryAudioFilesInput
	(*SocketTrackPositionChangeInput)(nil), // 26: pb.SocketTrackPositionChangeInput
	(*SpectrumGenerateInput)(nil),          // 27: pb.SpectrumGenerateInput
	(*SpectrumGenerateOutput)(nil),         // 28: pb.SpectrumGenerateOutput
	(*TrackStartedInput)(nil),              // 29: pb.TrackStartedInput
	(*TrackEndedInput)(nil),                // 30: pb.TrackEndedInput
	(*TrackPlayedInput)(nil),               // 31: pb.TrackPlayedInput
	(*TrackPositionInput)(nil),             // 32: pb.TrackPositionInput
	(*TrackSkippedInput)(nil),              // 33: pb.TrackSkippedInput
	(*Media)(nil),                          // 34: pb.Media
	(*timestamp.Timestamp)(nil),            // 35: google.protobuf.Timestamp
}
var file_messages_proto_depIdxs = []int32{
	34, // 0: pb.ArtworkExtractInput.media:type_name -> pb.Media
	35, // 1: pb.ArtworkExtractInput.scan_date:type_name -> google.protobuf.Timestamp
	34, // 2: pb.ArtworkUpdateInput.media:type_name -> pb.Media
	11, // 3: pb.DirectoryReadOutput.files:type_name -> pb.FileItem
	34, // 4: pb.IPCInput.media:type_name -> pb.Media
	0,  // 5: pb.IPCInput.command:type_name -> pb.Message
	35, // 6: pb.MediaEventInput.ts:type_name -> google.protobuf.Timestamp
	0,  // 7: pb.MediaEventInput.event:type_name -> pb.Message
	34, // 8: pb.MediaInfoInput.media:type_name -> pb.Media
	34, // 9: pb.MediaInfoOutput.media:type_name -> pb.Media
	24, // 10: pb.MediaInfoOutput.response:type_name -> pb.Response
	35, // 11: pb.MediaInfoOutput.last_modified_date:type_name -> google.protobuf.Timestamp
	34, // 12: pb.MediaInfosOutput.medias:type_name -> pb.Media
	24, // 13: pb.MediaInfosOutput.response:type_name -> pb.Response
	34, // 14: pb.PlayTrackInput.media:type_name -> pb.Media
	34, // 15: pb.Queue.media:type_name -> pb.Media
	34, // 16: pb.QueueInput.media:type_name -> pb.Media
	1,  // 17: pb.QueueInput.named_position:type_name -> pb.NamedPosition
	20, // 18: pb.QueueOutput.rows:type_name -> pb.Queue
	35, // 19: pb.ScanDirectoryAudioFilesInput.scan_date:type_name -> google.protobuf.Timestamp
	34, // 20: pb.SocketTrackPositionChangeInput.media:type_name -> pb.Media
	34, // 21: pb.SpectrumGenerateInput.media:type_name -> pb.Media
	34, // 22: pb.SpectrumGenerateOutput.media:type_name -> pb.Media
	34, // 23: pb.TrackStartedInput.media:type_name -> pb.Media
	35, // 24: pb.TrackStartedInput.timestamp:type_name -> google.protobuf.Timestamp
	34, // 25: pb.TrackEndedInput.media:type_name -> pb.Media
	35, // 26: pb.TrackEndedInput.timestamp:type_name -> google.protobuf.Timestamp
	34, // 27: pb.TrackPlayedInput.media:type_name -> pb.Media
	35, // 28: pb.TrackPlayedInput.timestamp:type_name -> google.protobuf.Timestamp
	34, // 29: pb.TrackPositionInput.media:type_name -> pb.Media
	34, // 30: pb.TrackSkippedInput.media:type_name -> pb.Media
	35, // 31: pb.TrackSkippedInput.timestamp:type_name -> google.protobuf.Timestamp
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_media_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtworkDownloadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtworkDownloadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtworkExtractInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtworkUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryReadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryReadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPCInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPCOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaInfoInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaInfoOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaInfosOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaUpdateSHAInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicroServiceDiscoveryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicroServiceDiscoveryOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayTrackInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueChangedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanDirectoryAudioFilesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocketTrackPositionChangeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpectrumGenerateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpectrumGenerateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackStartedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackEndedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPlayedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPositionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackSkippedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
