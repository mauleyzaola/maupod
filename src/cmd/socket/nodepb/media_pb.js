// source: media.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.pb.Media', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Media = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Media, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Media.displayName = 'proto.pb.Media';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Media.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Media.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Media} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Media.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sha: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastScan: (f = msg.getLastScan()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fileExtension: jspb.Message.getFieldWithDefault(msg, 6, ""),
    format: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fileSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    duration: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    overallBitRateMode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    overallBitRate: jspb.Message.getFieldWithDefault(msg, 11, 0),
    streamSize: jspb.Message.getFieldWithDefault(msg, 12, 0),
    album: jspb.Message.getFieldWithDefault(msg, 13, ""),
    title: jspb.Message.getFieldWithDefault(msg, 14, ""),
    track: jspb.Message.getFieldWithDefault(msg, 15, ""),
    trackPosition: jspb.Message.getFieldWithDefault(msg, 16, 0),
    performer: jspb.Message.getFieldWithDefault(msg, 17, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 18, ""),
    recordedDate: jspb.Message.getFieldWithDefault(msg, 19, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 21, ""),
    channels: jspb.Message.getFieldWithDefault(msg, 22, ""),
    channelPositions: jspb.Message.getFieldWithDefault(msg, 23, ""),
    channelLayout: jspb.Message.getFieldWithDefault(msg, 24, ""),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 25, 0),
    samplingCount: jspb.Message.getFieldWithDefault(msg, 26, 0),
    bitDepth: jspb.Message.getFieldWithDefault(msg, 27, 0),
    compressionMode: jspb.Message.getFieldWithDefault(msg, 28, ""),
    encodedLibraryName: jspb.Message.getFieldWithDefault(msg, 30, ""),
    encodedLibraryVersion: jspb.Message.getFieldWithDefault(msg, 31, ""),
    bitRateMode: jspb.Message.getFieldWithDefault(msg, 32, ""),
    bitRate: jspb.Message.getFieldWithDefault(msg, 33, 0),
    trackNameTotal: jspb.Message.getFieldWithDefault(msg, 34, 0),
    albumPerformer: jspb.Message.getFieldWithDefault(msg, 35, ""),
    audioCount: jspb.Message.getFieldWithDefault(msg, 36, 0),
    bitDepthString: jspb.Message.getFieldWithDefault(msg, 37, ""),
    commercialName: jspb.Message.getFieldWithDefault(msg, 38, ""),
    completeName: jspb.Message.getFieldWithDefault(msg, 39, ""),
    countOfAudioStreams: jspb.Message.getFieldWithDefault(msg, 40, 0),
    encodedLibraryDate: jspb.Message.getFieldWithDefault(msg, 41, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 42, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 43, ""),
    formatInfo: jspb.Message.getFieldWithDefault(msg, 44, ""),
    formatUrl: jspb.Message.getFieldWithDefault(msg, 45, ""),
    internetMediaType: jspb.Message.getFieldWithDefault(msg, 46, ""),
    kindOfStream: jspb.Message.getFieldWithDefault(msg, 47, ""),
    part: jspb.Message.getFieldWithDefault(msg, 48, 0),
    partTotal: jspb.Message.getFieldWithDefault(msg, 49, 0),
    streamIdentifier: jspb.Message.getFieldWithDefault(msg, 50, 0),
    writingLibrary: jspb.Message.getFieldWithDefault(msg, 51, ""),
    modifiedDate: (f = msg.getModifiedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    composer: jspb.Message.getFieldWithDefault(msg, 53, ""),
    shaImage: jspb.Message.getFieldWithDefault(msg, 54, ""),
    lastImageScan: (f = msg.getLastImageScan()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    imageLocation: jspb.Message.getFieldWithDefault(msg, 56, ""),
    albumIdentifier: jspb.Message.getFieldWithDefault(msg, 57, ""),
    isCompilation: jspb.Message.getBooleanFieldWithDefault(msg, 58, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Media}
 */
proto.pb.Media.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Media;
  return proto.pb.Media.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Media} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Media}
 */
proto.pb.Media.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastScan(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileExtension(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFileSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOverallBitRateMode(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOverallBitRate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamSize(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbum(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrack(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTrackPosition(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerformer(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setGenre(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordedDate(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannels(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelPositions(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelLayout(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSamplingRate(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSamplingCount(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBitDepth(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompressionMode(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncodedLibraryName(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncodedLibraryVersion(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setBitRateMode(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBitRate(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTrackNameTotal(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumPerformer(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAudioCount(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setBitDepthString(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommercialName(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompleteName(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountOfAudioStreams(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncodedLibraryDate(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatInfo(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatUrl(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternetMediaType(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setKindOfStream(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPart(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPartTotal(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamIdentifier(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setWritingLibrary(value);
      break;
    case 52:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModifiedDate(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setComposer(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setShaImage(value);
      break;
    case 55:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastImageScan(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageLocation(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumIdentifier(value);
      break;
    case 58:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCompilation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Media.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Media.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Media} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Media.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSha();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastScan();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFileExtension();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getOverallBitRateMode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOverallBitRate();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getStreamSize();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getAlbum();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTrack();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTrackPosition();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getPerformer();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getGenre();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getRecordedDate();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getChannels();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getChannelPositions();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getChannelLayout();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getSamplingCount();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getBitDepth();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getCompressionMode();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getEncodedLibraryName();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getEncodedLibraryVersion();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getBitRateMode();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getBitRate();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getTrackNameTotal();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
  f = message.getAlbumPerformer();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getAudioCount();
  if (f !== 0) {
    writer.writeInt64(
      36,
      f
    );
  }
  f = message.getBitDepthString();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getCommercialName();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getCompleteName();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getCountOfAudioStreams();
  if (f !== 0) {
    writer.writeInt64(
      40,
      f
    );
  }
  f = message.getEncodedLibraryDate();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getFormatInfo();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getFormatUrl();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getInternetMediaType();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getKindOfStream();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getPart();
  if (f !== 0) {
    writer.writeInt64(
      48,
      f
    );
  }
  f = message.getPartTotal();
  if (f !== 0) {
    writer.writeInt64(
      49,
      f
    );
  }
  f = message.getStreamIdentifier();
  if (f !== 0) {
    writer.writeInt64(
      50,
      f
    );
  }
  f = message.getWritingLibrary();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getModifiedDate();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getComposer();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getShaImage();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getLastImageScan();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getImageLocation();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getAlbumIdentifier();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getIsCompilation();
  if (f) {
    writer.writeBool(
      58,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.Media.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sha = 2;
 * @return {string}
 */
proto.pb.Media.prototype.getSha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setSha = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.pb.Media.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp last_scan = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Media.prototype.getLastScan = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Media} returns this
*/
proto.pb.Media.prototype.setLastScan = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.clearLastScan = function() {
  return this.setLastScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Media.prototype.hasLastScan = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string file_extension = 6;
 * @return {string}
 */
proto.pb.Media.prototype.getFileExtension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFileExtension = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string format = 7;
 * @return {string}
 */
proto.pb.Media.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 file_size = 8;
 * @return {number}
 */
proto.pb.Media.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFileSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double duration = 9;
 * @return {number}
 */
proto.pb.Media.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setDuration = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string overall_bit_rate_mode = 10;
 * @return {string}
 */
proto.pb.Media.prototype.getOverallBitRateMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setOverallBitRateMode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 overall_bit_rate = 11;
 * @return {number}
 */
proto.pb.Media.prototype.getOverallBitRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setOverallBitRate = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 stream_size = 12;
 * @return {number}
 */
proto.pb.Media.prototype.getStreamSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setStreamSize = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string album = 13;
 * @return {string}
 */
proto.pb.Media.prototype.getAlbum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setAlbum = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string title = 14;
 * @return {string}
 */
proto.pb.Media.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string track = 15;
 * @return {string}
 */
proto.pb.Media.prototype.getTrack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setTrack = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int64 track_position = 16;
 * @return {number}
 */
proto.pb.Media.prototype.getTrackPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setTrackPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string performer = 17;
 * @return {string}
 */
proto.pb.Media.prototype.getPerformer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setPerformer = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string genre = 18;
 * @return {string}
 */
proto.pb.Media.prototype.getGenre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setGenre = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int64 recorded_date = 19;
 * @return {number}
 */
proto.pb.Media.prototype.getRecordedDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setRecordedDate = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string comment = 21;
 * @return {string}
 */
proto.pb.Media.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string channels = 22;
 * @return {string}
 */
proto.pb.Media.prototype.getChannels = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setChannels = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string channel_positions = 23;
 * @return {string}
 */
proto.pb.Media.prototype.getChannelPositions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setChannelPositions = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string channel_layout = 24;
 * @return {string}
 */
proto.pb.Media.prototype.getChannelLayout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setChannelLayout = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional int64 sampling_rate = 25;
 * @return {number}
 */
proto.pb.Media.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setSamplingRate = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int64 sampling_count = 26;
 * @return {number}
 */
proto.pb.Media.prototype.getSamplingCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setSamplingCount = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 bit_depth = 27;
 * @return {number}
 */
proto.pb.Media.prototype.getBitDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setBitDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional string compression_mode = 28;
 * @return {string}
 */
proto.pb.Media.prototype.getCompressionMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setCompressionMode = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string encoded_library_name = 30;
 * @return {string}
 */
proto.pb.Media.prototype.getEncodedLibraryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setEncodedLibraryName = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string encoded_library_version = 31;
 * @return {string}
 */
proto.pb.Media.prototype.getEncodedLibraryVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setEncodedLibraryVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string bit_rate_mode = 32;
 * @return {string}
 */
proto.pb.Media.prototype.getBitRateMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setBitRateMode = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional int64 bit_rate = 33;
 * @return {number}
 */
proto.pb.Media.prototype.getBitRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setBitRate = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 track_name_total = 34;
 * @return {number}
 */
proto.pb.Media.prototype.getTrackNameTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setTrackNameTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional string album_performer = 35;
 * @return {string}
 */
proto.pb.Media.prototype.getAlbumPerformer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setAlbumPerformer = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional int64 audio_count = 36;
 * @return {number}
 */
proto.pb.Media.prototype.getAudioCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setAudioCount = function(value) {
  return jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional string bit_depth_string = 37;
 * @return {string}
 */
proto.pb.Media.prototype.getBitDepthString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setBitDepthString = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string commercial_name = 38;
 * @return {string}
 */
proto.pb.Media.prototype.getCommercialName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setCommercialName = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string complete_name = 39;
 * @return {string}
 */
proto.pb.Media.prototype.getCompleteName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setCompleteName = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional int64 count_of_audio_streams = 40;
 * @return {number}
 */
proto.pb.Media.prototype.getCountOfAudioStreams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setCountOfAudioStreams = function(value) {
  return jspb.Message.setProto3IntField(this, 40, value);
};


/**
 * optional string encoded_library_date = 41;
 * @return {string}
 */
proto.pb.Media.prototype.getEncodedLibraryDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setEncodedLibraryDate = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string file_name = 42;
 * @return {string}
 */
proto.pb.Media.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string folder_name = 43;
 * @return {string}
 */
proto.pb.Media.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string format_info = 44;
 * @return {string}
 */
proto.pb.Media.prototype.getFormatInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFormatInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string format_url = 45;
 * @return {string}
 */
proto.pb.Media.prototype.getFormatUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setFormatUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string internet_media_type = 46;
 * @return {string}
 */
proto.pb.Media.prototype.getInternetMediaType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setInternetMediaType = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string kind_of_stream = 47;
 * @return {string}
 */
proto.pb.Media.prototype.getKindOfStream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setKindOfStream = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional int64 part = 48;
 * @return {number}
 */
proto.pb.Media.prototype.getPart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setPart = function(value) {
  return jspb.Message.setProto3IntField(this, 48, value);
};


/**
 * optional int64 part_total = 49;
 * @return {number}
 */
proto.pb.Media.prototype.getPartTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setPartTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional int64 stream_identifier = 50;
 * @return {number}
 */
proto.pb.Media.prototype.getStreamIdentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setStreamIdentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional string writing_library = 51;
 * @return {string}
 */
proto.pb.Media.prototype.getWritingLibrary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setWritingLibrary = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional google.protobuf.Timestamp modified_date = 52;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Media.prototype.getModifiedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 52));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Media} returns this
*/
proto.pb.Media.prototype.setModifiedDate = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.clearModifiedDate = function() {
  return this.setModifiedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Media.prototype.hasModifiedDate = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional string composer = 53;
 * @return {string}
 */
proto.pb.Media.prototype.getComposer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setComposer = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string sha_image = 54;
 * @return {string}
 */
proto.pb.Media.prototype.getShaImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setShaImage = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional google.protobuf.Timestamp last_image_scan = 55;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Media.prototype.getLastImageScan = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 55));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Media} returns this
*/
proto.pb.Media.prototype.setLastImageScan = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.clearLastImageScan = function() {
  return this.setLastImageScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Media.prototype.hasLastImageScan = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional string image_location = 56;
 * @return {string}
 */
proto.pb.Media.prototype.getImageLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setImageLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional string album_identifier = 57;
 * @return {string}
 */
proto.pb.Media.prototype.getAlbumIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setAlbumIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * optional bool is_compilation = 58;
 * @return {boolean}
 */
proto.pb.Media.prototype.getIsCompilation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 58, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.Media} returns this
 */
proto.pb.Media.prototype.setIsCompilation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 58, value);
};


goog.object.extend(exports, proto.pb);
