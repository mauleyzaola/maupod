openapi: 3.0.2
info:
  title: "Maupod API"
  version: "v0.0.1"

servers:
  - url: "http://localhost:7400"

tags:
  - name: audio
    description: "description"
  - name: events
    description: "description"
  - name: file-browser
    description: "description"
  - name: genres
    description: "description" 
  - name: ipc
    description: "description" 
  - name: media
    description: "description"           
  - name: providers
    description: "description"  
  - name: queue
    description: "description"         
  - name: system
    description: "description"            


paths:
  /audio/scan:
    post:
      tags:
        - audio
      summary: Scan Audio Files
      responses:
        200:
          description: ok
        400:
          description: Bad Request
        500:
          description: Internal Server Error  
  /genres:
    get:
      tags:
        - genres
      summary: Get Genres
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGenre'    
        500:
          description: Internal Server Error  
  /genres/artwork:
    get:
      tags:
        - genres
      summary: Genres List and Artwork
      responses:
        200:
          description: ok
          content:
            text/plain:         
              schema:
                type: array
                items:
                   $ref: '#/components/schemas/Artwork'         
        500:
          description: Internal Server Error                    
  /ipc:
    post:
      tags:
        - ipc
      summary: Post IPC
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPCInput'           
        400:
          description: Bad Request
  /events:
    get:
      tags:
        - events
      summary: Get event media
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaEvent'
        500:
          description: Estatus Internal Server Error        
    post:
      tags:
        - events
      summary: Post event media
      responses:
        200:
          description: ok
        400:
          description: Bad Request 
        500:
          description: Internal Server Error
  /file-browser/directory:
    post:
      tags:
        - file-browser
      summary: Post directory 
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryReadOutput'
        400:
          description: Bad Request 
        500:
          description: Internal Server Error     
  /media/{field}/distinct:
    get:
      tags:
        - media
      summary: List
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type : string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
  /media:
    get:
      tags:
        - media
      summary: media
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        400:
          description: Bad Request
  /media/albums:
    get:
      tags:
        - media
      summary: get albums
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViewAlbum' 
        400:
          description: Bad Request                
  /media/{id}/spectrum:
    get:
      tags:
        - media
      summary: get spectrum imagen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type : string     
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpectrumGenerateInput'
        400:
          description: Bad Request
        404:
          description: Not Found        
  /providers/metadata/cover:
    get:
      tags:
        - providers
      summary: Metadata of all albums
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
  /providers/metadata/cover/{album_identifier}:
    put:
      tags:
        - providers
      summary: Metadata of an albums
      parameters:
        - name: album_identifier
          in: path
          required: true
          schema:
            type: string       
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
        400:
          description: Bad Request  
  /system/ping:
    get:
      tags:
        - system
      summary: Checks server is up
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingOutput'
  /queue:
    get:
      tags:
        - queue
      summary: returns the list of tracks in the queue  
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueueOutput'  
        500:
          description: Internal Server Error
    post:
      tags:
        - queue
      summary: post queue
      responses:
        301:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueOutput'
        400:
          description: Status Bad Request        
  /queue/{index}:
    delete:
      tags:
        - queue
      summary: Delete element queue
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string    
      responses:
        302:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueOutput'         
        400:
          description: Status Bad Request 

          
components:
  schemas:
    Artwork:
      type: object
      properties:
        genre:
          type: string 
        imagen:
          type: array
          items:      
            type: string  
    Community:
      type: object
      properties:
        want:
          type: integer
        have:
          type: integer
    DirectoryReadOutput:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileItem'          
        error:
          type: string    
    FileItem:
      type: object
      properties:
          location:
            type: string
          is_dir:
            type: boolean
          size:
            type: integer
            format: 'int64'
          name:
            type: string
          id:
            type: string
    IPCInput:
      type: object
      properties:
        media:
          $ref: '#/components/schemas/Media'
        value:
          type: string
        command:
          $ref: '#/components/schemas/Message'
    Media:
      type: object
      properties:
        id:
          type: string
        sha:
         type: string
         description: the signature of a file to uniquely identify with or without a system
        location:
          type: string 
        last_scan:
          $ref: '#/components/schemas/Timestamp'  
        directory:
          type: string
        file_extension:
          type: string
        format: 
          type: string
        file_size:
          type: string
        duration:
          type: string
        overall_bit_rate_mode:
          type: string
        overall_bit_rate:
          type: integer   
        stream_size:
          type: integer
        album:
          type: string
        title:
          type: string
        track:
          type: string 
        track_position:
          type: integer
        performer:
          type: string 
        genre:
          type: string
        recorded_date:
          type: integer 
        comment:
          type: string
        channels:
          type: string
        channel_positions:
          type: string 
        channel_layout:
          type: string 
        sampling_rate:
          type: integer 
        sampling_count:
          type: integer 
        bit_depth:
          type: integer 
        compression_mode:
          type: string
        encoded_library_name:
          type: string
        encoded_library_version:
          type: string 
        bit_rate_mode:
          type: string 
        bit_rate:
          type: integer 
        track_name_total:
          type: integer 
        album_performer:
          type: string
        audio_count:
          type: integer 
        bit_depth_string:
          type: string
        commercial_name:
          type: string
        complete_name:
          type: string 
        count_of_audio_streams:
          type: integer 
        encoded_library_date:
          type: string 
        file_name:
          type: string 
        folder_name:
          type: string 
        format_info:
          type: string 
        format_url:
          type: string 
        internet_media_type:
          type: string 
        kind_of_stream:
          type: string 
        part:
          type: integer 
        part_total:
          type: integer 
        stream_identifier:
          type: integer 
        writing_library:
          type: string 
        modified_date:
          $ref: '#/components/schemas/Timestamp' 
        composer:
          type: string 
        last_image_scan:
          $ref: '#/components/schemas/Timestamp'  
        image_location:
          type: string 
        album_identifier:
          type: string 
    Message:
      type: object
      properties:
        message:
          type: integer
          format: int32     
    MediaEvent:
      type: object
      properties:
          id:
            type: string
          sha:
            type: string
          ts:
            $ref: '#/components/schemas/Time'       
          event:
            type: integer  
    PingOutput:
      type: object
      properties:
        message:
          type: string    
    Queue:
      type: object
      properties:
        id:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        position:
          type: integer       
    QueueOutput:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Queue'
        error:
          type: string
    QueueInput:
      type: object
      properties:
        media:
          $ref: '#/components/schemas/Media'
        index:
          type: integer
        named_position:
          type: integer
    Result:
      type: object
      properties:
        uuid:
          type: string
        country:
          type: string
        year:
          type: string
        format:
          type: array
          items: 
            type: string
        label:
          type: array
          items: 
            type: string        
        type:
          type: string
        genre:
          type: array
          items: 
            type: string        
        style:
          type: array
          items: 
            type: string        
        id:
          type: integer
        barcode:
          type: array
          items: 
            type: string          
        user_data:
          $ref: '#/components/schemas/UserData'
        master_id:
          type: integer
        master_url:
          type: string
        uri:
          type: string
        catno:
          type: string
        title:
          type: string
        thumb:
          type: string
        cover_image:
          type: string
        resource_url:
          type: string
        comunity:
          $ref: '#/components/schemas/Community'
        format_quantity:
          type: integer
    SpectrumGenerateInput:
          type: object
          properties:
              media:
                $ref: '#/components/schemas/Media'
              width:
                type: integer
                format: int64
              height:
                type: integer  
                format: int64       
    UserData:
      type: object
      properties:
        in_wantlist:
          type: boolean
        in_collection:
          type: boolean        
    Time:
      type: object
      properties:
        wall:
          type: integer
          format : int64
        ext: 
          type: integer
          format: int64       
    Timestamp:
      type: object
      properties:
        seconds:
          type: integer
          format : int64
        nanos:
          type: integer
          format: int32  
    ViewAlbum:
      type: object
      properties:
        id:
          type: string
        album_identifier:
          type: string
        album: 
          type: string
        duration:
          type: integer
          format: int64
        bit_rate:
          type: integer
          format: int64
        performer:
          type: string   
        genre:
          type: string
        recorded_date:
          type: integer
          format: int64
        sampling_rate:
          type: integer
          format: int64        
        track_name_total:
          type: integer
          format: int64        
        image_location:
          type: string        
        format:
          type: string        
        file_size:
          type: integer
          format: int64        
    ViewGenre:
      type: object
      properties:
        genre:
          type: string
        performer_count:
          type: number
          format: float
        album_count:
          type: number
          format: float
        duration:
          type: number
          format: float
        total:
          type: number
          format: float 